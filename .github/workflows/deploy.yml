name: Deploy to EC2 via ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          set -e
          IMAGE_NAME="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}"
          SHA_TAG="$IMAGE_NAME:sha-${GITHUB_SHA}"
          LATEST_TAG="$IMAGE_NAME:latest"
          docker build -t "$SHA_TAG" -t "$LATEST_TAG" .
          echo "SHA_TAG=$SHA_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Push Docker image
        run: |
          docker push "${{ env.SHA_TAG }}"
          docker push "${{ env.LATEST_TAG }}"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/policy-qa
            # Write image tag into .env for compose
            sed -i 's#^IMAGE=.*#IMAGE=${{ env.SHA_TAG }}#' .env || echo "IMAGE=${{ env.SHA_TAG }}" >> .env
            docker compose pull || true
            docker compose up -d
            docker image prune -f
